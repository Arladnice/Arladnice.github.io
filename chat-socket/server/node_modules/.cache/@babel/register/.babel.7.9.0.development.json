{
  "{\"sourceRoot\":\"C:\\\\GitHub\\\\Arladnice.github.io\\\\chat-socket\\\\server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\GitHub\\\\Arladnice.github.io\\\\chat-socket\\\\server\",\"filename\":\"C:\\\\GitHub\\\\Arladnice.github.io\\\\chat-socket\\\\server\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\GitHub\\\\Arladnice.github.io\\\\chat-socket\\\\server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server",
      "filename": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _socket = _interopRequireDefault(require(\"socket.io\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _events = _interopRequireDefault(require(\"./events\"));\n\nvar _fs = require(\"./helpers/fs\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n_dotenv[\"default\"].config();\n\nvar port = process.env.SOCKET_PORT || 5000;\nvar app = (0, _express[\"default\"])();\napp.use('/static', _express[\"default\"][\"static\"](_path[\"default\"].resolve(__dirname, 'public'))).use((0, _cors[\"default\"])()).use((0, _morgan[\"default\"])('dev'));\napp.get('/users', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var users;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getUsersData();\n\n          case 2:\n            users = _context.sent;\n            res.send(JSON.stringify(users));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nvar server = app.listen(port, function () {\n  console.log('server up and running on port ' + port);\n});\nvar io = (0, _socket[\"default\"])(server);\nio.on('connection', function (socket) {\n  console.log('a user connected', socket.id);\n  socket.on(_events[\"default\"].CHOOSE_USER_FROM_CLIENT, /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref2) {\n      var id, users, userAliases, changedUsers, aliasObject, changedAliases;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              id = _ref2.id;\n              socket.broadcast.emit(_events[\"default\"].CHOOSE_USER_FROM_SERVER, {\n                id: id\n              });\n              _context2.next = 4;\n              return getUsersData();\n\n            case 4:\n              users = _context2.sent;\n              _context2.next = 7;\n              return (0, _fs.readFile)('socket-user-aliases.json');\n\n            case 7:\n              userAliases = _context2.sent;\n              changedUsers = disableUser(id, users);\n              aliasObject = {\n                cocketId: socket.id,\n                userId: id\n              };\n              changedAliases = [].concat(_toConsumableArray(userAliases), [aliasObject]);\n              _context2.next = 13;\n              return updateUsersData(changedUsers);\n\n            case 13:\n              _context2.next = 15;\n              return updateAliases(changedAliases);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n  socket.on(_events[\"default\"].ADD_MESSAGE_FROM_CLIENT, function (_ref4) {\n    var message = _ref4.message;\n    socket.broadcast.emit(_events[\"default\"].ADD_MESSAGE_FROM_SERVER, {\n      message: message\n    });\n  });\n  socket.on('disconnect', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    var UID, userAliases, users, changedUsers, changedAliases;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            UID = null;\n            console.log('user disconnected', socket.id);\n            _context3.next = 4;\n            return (0, _fs.readFile)('socket-user-aliases.json');\n\n          case 4:\n            userAliases = _context3.sent;\n            userAliases.forEach(function (_ref6) {\n              var cocketId = _ref6.cocketId,\n                  userId = _ref6.userId;\n\n              if (cocketId === socket.id) {\n                UID = userId;\n              }\n            });\n\n            if (!UID) {\n              _context3.next = 17;\n              break;\n            }\n\n            socket.broadcast.emit(_events[\"default\"].ENABLE_USER_FROM_SERVER, {\n              id: UID\n            });\n            _context3.next = 10;\n            return getUsersData();\n\n          case 10:\n            users = _context3.sent;\n            changedUsers = enableUser(UID, users);\n            _context3.next = 14;\n            return updateUsersData(changedUsers);\n\n          case 14:\n            changedAliases = _toConsumableArray(userAliases.filter(function (obj) {\n              return obj.userId !== UID;\n            }));\n            _context3.next = 17;\n            return updateAliases(changedAliases);\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  })));\n});\n\nfunction getUsersData() {\n  return _getUsersData.apply(this, arguments);\n}\n\nfunction _getUsersData() {\n  _getUsersData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n    var data;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return (0, _fs.readFile)('users.json');\n\n          case 2:\n            data = _context4.sent;\n            return _context4.abrupt(\"return\", data);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getUsersData.apply(this, arguments);\n}\n\nfunction updateUsersData(_x4) {\n  return _updateUsersData.apply(this, arguments);\n}\n\nfunction _updateUsersData() {\n  _updateUsersData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(usersData) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return (0, _fs.updateFile)('users.json', usersData);\n\n          case 3:\n            return _context5.abrupt(\"return\", true);\n\n          case 6:\n            _context5.prev = 6;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.log('Error update users', _context5.t0);\n            return _context5.abrupt(\"return\", false);\n\n          case 10:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 6]]);\n  }));\n  return _updateUsersData.apply(this, arguments);\n}\n\nfunction updateAliases(_x5) {\n  return _updateAliases.apply(this, arguments);\n}\n\nfunction _updateAliases() {\n  _updateAliases = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(aliasesData) {\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return (0, _fs.updateFile)('socket-user-aliases.json', aliasesData);\n\n          case 3:\n            return _context6.abrupt(\"return\", true);\n\n          case 6:\n            _context6.prev = 6;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.log('Error update aliases', _context6.t0);\n            return _context6.abrupt(\"return\", false);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[0, 6]]);\n  }));\n  return _updateAliases.apply(this, arguments);\n}\n\nfunction enableUser(id, users) {\n  return users.map(function (user) {\n    return user.id === id ? _objectSpread({}, user, {\n      available: true\n    }) : user;\n  });\n}\n\nfunction disableUser(id, users) {\n  return users.map(function (user) {\n    return user.id === id ? _objectSpread({}, user, {\n      available: false\n    }) : user;\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRvdGVudiIsImNvbmZpZyIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiU09DS0VUX1BPUlQiLCJhcHAiLCJ1c2UiLCJleHByZXNzIiwicGF0aCIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJnZXQiLCJyZXEiLCJyZXMiLCJnZXRVc2Vyc0RhdGEiLCJ1c2VycyIsInNlbmQiLCJKU09OIiwic3RyaW5naWZ5Iiwic2VydmVyIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyIsImlvIiwib24iLCJzb2NrZXQiLCJpZCIsIkUiLCJDSE9PU0VfVVNFUl9GUk9NX0NMSUVOVCIsImJyb2FkY2FzdCIsImVtaXQiLCJDSE9PU0VfVVNFUl9GUk9NX1NFUlZFUiIsInVzZXJBbGlhc2VzIiwiY2hhbmdlZFVzZXJzIiwiZGlzYWJsZVVzZXIiLCJhbGlhc09iamVjdCIsImNvY2tldElkIiwidXNlcklkIiwiY2hhbmdlZEFsaWFzZXMiLCJ1cGRhdGVVc2Vyc0RhdGEiLCJ1cGRhdGVBbGlhc2VzIiwiQUREX01FU1NBR0VfRlJPTV9DTElFTlQiLCJtZXNzYWdlIiwiQUREX01FU1NBR0VfRlJPTV9TRVJWRVIiLCJVSUQiLCJmb3JFYWNoIiwiRU5BQkxFX1VTRVJfRlJPTV9TRVJWRVIiLCJlbmFibGVVc2VyIiwiZmlsdGVyIiwib2JqIiwiZGF0YSIsInVzZXJzRGF0YSIsImFsaWFzZXNEYXRhIiwibWFwIiwidXNlciIsImF2YWlsYWJsZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQUEsbUJBQU9DLE1BQVA7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsV0FBWixJQUEyQixJQUF4QztBQUNBLElBQU1DLEdBQUcsR0FBRywwQkFBWjtBQUVBQSxHQUFHLENBQ0RDLEdBREYsQ0FDTSxTQUROLEVBQ2lC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Y2hhdC1zb2NrZXRcXHNlcnZlclxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRvdGVudiBmcm9tICdkb3RlbnYnO1xyXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcclxuaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XHJcbmltcG9ydCBzb2NrZXQgZnJvbSAnc29ja2V0LmlvJztcclxuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XHJcbmltcG9ydCBtb3JnYW4gZnJvbSAnbW9yZ2FuJztcclxuXHJcbmltcG9ydCBFIGZyb20gJy4vZXZlbnRzJztcclxuaW1wb3J0IHsgcmVhZEZpbGUsIHVwZGF0ZUZpbGUgfSBmcm9tICcuL2hlbHBlcnMvZnMnO1xyXG5cclxuZG90ZW52LmNvbmZpZygpO1xyXG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuU09DS0VUX1BPUlQgfHwgNTAwMDtcclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuYXBwXHJcblx0LnVzZSgnL3N0YXRpYycsIGV4cHJlc3Muc3RhdGljKHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICdwdWJsaWMnKSkpXHJcblx0LnVzZShjb3JzKCkpXHJcblx0LnVzZShtb3JnYW4oJ2RldicpKTtcclxuXHJcbmFwcC5nZXQoJy91c2VycycsIGFzeW5jIGZ1bmN0aW9uIChyZXEsIHJlcykge1xyXG5cdGNvbnN0IHVzZXJzID0gYXdhaXQgZ2V0VXNlcnNEYXRhKCk7XHJcblx0cmVzLnNlbmQoSlNPTi5zdHJpbmdpZnkodXNlcnMpKTtcclxufSk7XHJcblxyXG5jb25zdCBzZXJ2ZXIgPSBhcHAubGlzdGVuKHBvcnQsIGZ1bmN0aW9uICgpIHtcclxuXHRjb25zb2xlLmxvZygnc2VydmVyIHVwIGFuZCBydW5uaW5nIG9uIHBvcnQgJyArIHBvcnQpO1xyXG59KTtcclxuXHJcbmNvbnN0IGlvID0gc29ja2V0KHNlcnZlcik7XHJcblxyXG5pby5vbignY29ubmVjdGlvbicsIGZ1bmN0aW9uIChzb2NrZXQpIHtcclxuXHRjb25zb2xlLmxvZygnYSB1c2VyIGNvbm5lY3RlZCcsIHNvY2tldC5pZCk7XHJcblxyXG5cdHNvY2tldC5vbihFLkNIT09TRV9VU0VSX0ZST01fQ0xJRU5ULCBhc3luYyAoeyBpZCB9KSA9PiB7XHJcblx0XHRzb2NrZXQuYnJvYWRjYXN0LmVtaXQoRS5DSE9PU0VfVVNFUl9GUk9NX1NFUlZFUiwgeyBpZCB9KTtcclxuXHRcdGNvbnN0IHVzZXJzID0gYXdhaXQgZ2V0VXNlcnNEYXRhKCk7XHJcblx0XHRjb25zdCB1c2VyQWxpYXNlcyA9IGF3YWl0IHJlYWRGaWxlKCdzb2NrZXQtdXNlci1hbGlhc2VzLmpzb24nKTtcclxuXHRcdGNvbnN0IGNoYW5nZWRVc2VycyA9IGRpc2FibGVVc2VyKGlkLCB1c2Vycyk7XHJcblx0XHRjb25zdCBhbGlhc09iamVjdCA9IHtcclxuXHRcdFx0Y29ja2V0SWQ6IHNvY2tldC5pZCxcclxuXHRcdFx0dXNlcklkOiBpZCxcclxuXHRcdH07XHJcblx0XHRjb25zdCBjaGFuZ2VkQWxpYXNlcyA9IFsuLi51c2VyQWxpYXNlcywgYWxpYXNPYmplY3RdO1xyXG5cdFx0YXdhaXQgdXBkYXRlVXNlcnNEYXRhKGNoYW5nZWRVc2Vycyk7XHJcblx0XHRhd2FpdCB1cGRhdGVBbGlhc2VzKGNoYW5nZWRBbGlhc2VzKTtcclxuXHR9KTtcclxuXHJcblx0c29ja2V0Lm9uKEUuQUREX01FU1NBR0VfRlJPTV9DTElFTlQsICh7IG1lc3NhZ2UgfSkgPT4ge1xyXG5cdFx0c29ja2V0LmJyb2FkY2FzdC5lbWl0KEUuQUREX01FU1NBR0VfRlJPTV9TRVJWRVIsIHsgbWVzc2FnZSB9KTtcclxuXHR9KTtcclxuXHJcblx0c29ja2V0Lm9uKCdkaXNjb25uZWN0JywgYXN5bmMgZnVuY3Rpb24gKCkge1xyXG5cdFx0bGV0IFVJRCA9IG51bGw7XHJcblx0XHRjb25zb2xlLmxvZygndXNlciBkaXNjb25uZWN0ZWQnLCBzb2NrZXQuaWQpO1xyXG5cdFx0Y29uc3QgdXNlckFsaWFzZXMgPSBhd2FpdCByZWFkRmlsZSgnc29ja2V0LXVzZXItYWxpYXNlcy5qc29uJyk7XHJcblxyXG5cdFx0dXNlckFsaWFzZXMuZm9yRWFjaCgoeyBjb2NrZXRJZCwgdXNlcklkIH0pID0+IHtcclxuXHRcdFx0aWYgKGNvY2tldElkID09PSBzb2NrZXQuaWQpIHtcclxuXHRcdFx0XHRVSUQgPSB1c2VySWQ7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cclxuXHRcdGlmIChVSUQpIHtcclxuXHRcdFx0c29ja2V0LmJyb2FkY2FzdC5lbWl0KEUuRU5BQkxFX1VTRVJfRlJPTV9TRVJWRVIsIHsgaWQ6IFVJRCB9KTtcclxuXHRcdFx0Y29uc3QgdXNlcnMgPSBhd2FpdCBnZXRVc2Vyc0RhdGEoKTtcclxuXHRcdFx0Y29uc3QgY2hhbmdlZFVzZXJzID0gZW5hYmxlVXNlcihVSUQsIHVzZXJzKTtcclxuXHRcdFx0YXdhaXQgdXBkYXRlVXNlcnNEYXRhKGNoYW5nZWRVc2Vycyk7XHJcblx0XHRcdGNvbnN0IGNoYW5nZWRBbGlhc2VzID0gW1xyXG5cdFx0XHRcdC4uLnVzZXJBbGlhc2VzLmZpbHRlcigob2JqKSA9PiBvYmoudXNlcklkICE9PSBVSUQpLFxyXG5cdFx0XHRdO1xyXG5cdFx0XHRhd2FpdCB1cGRhdGVBbGlhc2VzKGNoYW5nZWRBbGlhc2VzKTtcclxuXHRcdH1cclxuXHR9KTtcclxufSk7XHJcblxyXG5hc3luYyBmdW5jdGlvbiBnZXRVc2Vyc0RhdGEoKSB7XHJcblx0Y29uc3QgZGF0YSA9IGF3YWl0IHJlYWRGaWxlKCd1c2Vycy5qc29uJyk7XHJcblx0cmV0dXJuIGRhdGE7XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVVzZXJzRGF0YSh1c2Vyc0RhdGEpIHtcclxuXHR0cnkge1xyXG5cdFx0YXdhaXQgdXBkYXRlRmlsZSgndXNlcnMuanNvbicsIHVzZXJzRGF0YSk7XHJcblx0XHRyZXR1cm4gdHJ1ZTtcclxuXHR9IGNhdGNoIChlcnIpIHtcclxuXHRcdGNvbnNvbGUubG9nKCdFcnJvciB1cGRhdGUgdXNlcnMnLCBlcnIpO1xyXG5cdFx0cmV0dXJuIGZhbHNlO1xyXG5cdH1cclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gdXBkYXRlQWxpYXNlcyhhbGlhc2VzRGF0YSkge1xyXG5cdHRyeSB7XHJcblx0XHRhd2FpdCB1cGRhdGVGaWxlKCdzb2NrZXQtdXNlci1hbGlhc2VzLmpzb24nLCBhbGlhc2VzRGF0YSk7XHJcblx0XHRyZXR1cm4gdHJ1ZTtcclxuXHR9IGNhdGNoIChlcnIpIHtcclxuXHRcdGNvbnNvbGUubG9nKCdFcnJvciB1cGRhdGUgYWxpYXNlcycsIGVycik7XHJcblx0XHRyZXR1cm4gZmFsc2U7XHJcblx0fVxyXG59XHJcblxyXG5mdW5jdGlvbiBlbmFibGVVc2VyKGlkLCB1c2Vycykge1xyXG5cdHJldHVybiB1c2Vycy5tYXAoKHVzZXIpID0+IHtcclxuXHRcdHJldHVybiB1c2VyLmlkID09PSBpZFxyXG5cdFx0XHQ/IHtcclxuXHRcdFx0XHRcdC4uLnVzZXIsXHJcblx0XHRcdFx0XHRhdmFpbGFibGU6IHRydWUsXHJcblx0XHRcdCAgfVxyXG5cdFx0XHQ6IHVzZXI7XHJcblx0fSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRpc2FibGVVc2VyKGlkLCB1c2Vycykge1xyXG5cdHJldHVybiB1c2Vycy5tYXAoKHVzZXIpID0+IHtcclxuXHRcdHJldHVybiB1c2VyLmlkID09PSBpZFxyXG5cdFx0XHQ/IHtcclxuXHRcdFx0XHRcdC4uLnVzZXIsXHJcblx0XHRcdFx0XHRhdmFpbGFibGU6IGZhbHNlLFxyXG5cdFx0XHQgIH1cclxuXHRcdFx0OiB1c2VyO1xyXG5cdH0pO1xyXG59XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "dotenv",
        "config",
        "port",
        "process",
        "env",
        "SOCKET_PORT",
        "app",
        "use",
        "express",
        "path",
        "resolve",
        "__dirname",
        "get",
        "req",
        "res",
        "getUsersData",
        "users",
        "send",
        "JSON",
        "stringify",
        "server",
        "listen",
        "console",
        "log",
        "io",
        "on",
        "socket",
        "id",
        "E",
        "CHOOSE_USER_FROM_CLIENT",
        "broadcast",
        "emit",
        "CHOOSE_USER_FROM_SERVER",
        "userAliases",
        "changedUsers",
        "disableUser",
        "aliasObject",
        "cocketId",
        "userId",
        "changedAliases",
        "updateUsersData",
        "updateAliases",
        "ADD_MESSAGE_FROM_CLIENT",
        "message",
        "ADD_MESSAGE_FROM_SERVER",
        "UID",
        "forEach",
        "ENABLE_USER_FROM_SERVER",
        "enableUser",
        "filter",
        "obj",
        "data",
        "usersData",
        "aliasesData",
        "map",
        "user",
        "available"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server\\",
      "sourcesContent": [
        "import dotenv from 'dotenv';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport socket from 'socket.io';\r\nimport path from 'path';\r\nimport morgan from 'morgan';\r\n\r\nimport E from './events';\r\nimport { readFile, updateFile } from './helpers/fs';\r\n\r\ndotenv.config();\r\nconst port = process.env.SOCKET_PORT || 5000;\r\nconst app = express();\r\n\r\napp\r\n\t.use('/static', express.static(path.resolve(__dirname, 'public')))\r\n\t.use(cors())\r\n\t.use(morgan('dev'));\r\n\r\napp.get('/users', async function (req, res) {\r\n\tconst users = await getUsersData();\r\n\tres.send(JSON.stringify(users));\r\n});\r\n\r\nconst server = app.listen(port, function () {\r\n\tconsole.log('server up and running on port ' + port);\r\n});\r\n\r\nconst io = socket(server);\r\n\r\nio.on('connection', function (socket) {\r\n\tconsole.log('a user connected', socket.id);\r\n\r\n\tsocket.on(E.CHOOSE_USER_FROM_CLIENT, async ({ id }) => {\r\n\t\tsocket.broadcast.emit(E.CHOOSE_USER_FROM_SERVER, { id });\r\n\t\tconst users = await getUsersData();\r\n\t\tconst userAliases = await readFile('socket-user-aliases.json');\r\n\t\tconst changedUsers = disableUser(id, users);\r\n\t\tconst aliasObject = {\r\n\t\t\tcocketId: socket.id,\r\n\t\t\tuserId: id,\r\n\t\t};\r\n\t\tconst changedAliases = [...userAliases, aliasObject];\r\n\t\tawait updateUsersData(changedUsers);\r\n\t\tawait updateAliases(changedAliases);\r\n\t});\r\n\r\n\tsocket.on(E.ADD_MESSAGE_FROM_CLIENT, ({ message }) => {\r\n\t\tsocket.broadcast.emit(E.ADD_MESSAGE_FROM_SERVER, { message });\r\n\t});\r\n\r\n\tsocket.on('disconnect', async function () {\r\n\t\tlet UID = null;\r\n\t\tconsole.log('user disconnected', socket.id);\r\n\t\tconst userAliases = await readFile('socket-user-aliases.json');\r\n\r\n\t\tuserAliases.forEach(({ cocketId, userId }) => {\r\n\t\t\tif (cocketId === socket.id) {\r\n\t\t\t\tUID = userId;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (UID) {\r\n\t\t\tsocket.broadcast.emit(E.ENABLE_USER_FROM_SERVER, { id: UID });\r\n\t\t\tconst users = await getUsersData();\r\n\t\t\tconst changedUsers = enableUser(UID, users);\r\n\t\t\tawait updateUsersData(changedUsers);\r\n\t\t\tconst changedAliases = [\r\n\t\t\t\t...userAliases.filter((obj) => obj.userId !== UID),\r\n\t\t\t];\r\n\t\t\tawait updateAliases(changedAliases);\r\n\t\t}\r\n\t});\r\n});\r\n\r\nasync function getUsersData() {\r\n\tconst data = await readFile('users.json');\r\n\treturn data;\r\n}\r\n\r\nasync function updateUsersData(usersData) {\r\n\ttry {\r\n\t\tawait updateFile('users.json', usersData);\r\n\t\treturn true;\r\n\t} catch (err) {\r\n\t\tconsole.log('Error update users', err);\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nasync function updateAliases(aliasesData) {\r\n\ttry {\r\n\t\tawait updateFile('socket-user-aliases.json', aliasesData);\r\n\t\treturn true;\r\n\t} catch (err) {\r\n\t\tconsole.log('Error update aliases', err);\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nfunction enableUser(id, users) {\r\n\treturn users.map((user) => {\r\n\t\treturn user.id === id\r\n\t\t\t? {\r\n\t\t\t\t\t...user,\r\n\t\t\t\t\tavailable: true,\r\n\t\t\t  }\r\n\t\t\t: user;\r\n\t});\r\n}\r\n\r\nfunction disableUser(id, users) {\r\n\treturn users.map((user) => {\r\n\t\treturn user.id === id\r\n\t\t\t? {\r\n\t\t\t\t\t...user,\r\n\t\t\t\t\tavailable: false,\r\n\t\t\t  }\r\n\t\t\t: user;\r\n\t});\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586541379606
  },
  "{\"sourceRoot\":\"C:\\\\GitHub\\\\Arladnice.github.io\\\\chat-socket\\\\server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\GitHub\\\\Arladnice.github.io\\\\chat-socket\\\\server\",\"filename\":\"C:\\\\GitHub\\\\Arladnice.github.io\\\\chat-socket\\\\server\\\\events.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\GitHub\\\\Arladnice.github.io\\\\chat-socket\\\\server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server",
      "filename": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server\\events.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server\\events.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server\\events.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server\\",
        "sourceFileName": "events.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  CHOOSE_USER_FROM_CLIENT: 'CHOOSE_USER_FROM_CLIENT',\n  CHOOSE_USER_FROM_SERVER: 'CHOOSE_USER_FROM_SERVER',\n  ADD_MESSAGE_FROM_CLIENT: 'ADD_MESSAGE_FROM_CLIENT',\n  ADD_MESSAGE_FROM_SERVER: 'ADD_MESSAGE_FROM_SERVER',\n  ENABLE_USER_FROM_SERVER: 'ENABLE_USER_FROM_SERVER'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50cy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiQ0hPT1NFX1VTRVJfRlJPTV9DTElFTlQiLCJDSE9PU0VfVVNFUl9GUk9NX1NFUlZFUiIsIkFERF9NRVNTQUdFX0ZST01fQ0xJRU5UIiwiQUREX01FU1NBR0VfRlJPTV9TRVJWRVIiLCJFTkFCTEVfVVNFUl9GUk9NX1NFUlZFUiJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2hCQyxFQUFBQSx1QkFBdUIsRUFBRSx5QkFEVDtBQUVoQkMsRUFBQUEsdUJBQXVCLEVBQUUseUJBRlQ7QUFHaEJDLEVBQUFBLHVCQUF1QixFQUFFLHlCQUhUO0FBSWhCQyxFQUFBQSx1QkFBdUIsRUFBRSx5QkFKVDtBQUtoQkMsRUFBQUEsdUJBQXVCLEVBQUU7QUFMVCxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcR2l0SHViXFxBcmxhZG5pY2UuZ2l0aHViLmlvXFxjaGF0LXNvY2tldFxcc2VydmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcclxuXHRDSE9PU0VfVVNFUl9GUk9NX0NMSUVOVDogJ0NIT09TRV9VU0VSX0ZST01fQ0xJRU5UJyxcclxuXHRDSE9PU0VfVVNFUl9GUk9NX1NFUlZFUjogJ0NIT09TRV9VU0VSX0ZST01fU0VSVkVSJyxcclxuXHRBRERfTUVTU0FHRV9GUk9NX0NMSUVOVDogJ0FERF9NRVNTQUdFX0ZST01fQ0xJRU5UJyxcclxuXHRBRERfTUVTU0FHRV9GUk9NX1NFUlZFUjogJ0FERF9NRVNTQUdFX0ZST01fU0VSVkVSJyxcclxuXHRFTkFCTEVfVVNFUl9GUk9NX1NFUlZFUjogJ0VOQUJMRV9VU0VSX0ZST01fU0VSVkVSJyxcclxufTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "events.js"
      ],
      "names": [
        "module",
        "exports",
        "CHOOSE_USER_FROM_CLIENT",
        "CHOOSE_USER_FROM_SERVER",
        "ADD_MESSAGE_FROM_CLIENT",
        "ADD_MESSAGE_FROM_SERVER",
        "ENABLE_USER_FROM_SERVER"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AAChBC,EAAAA,uBAAuB,EAAE,yBADT;AAEhBC,EAAAA,uBAAuB,EAAE,yBAFT;AAGhBC,EAAAA,uBAAuB,EAAE,yBAHT;AAIhBC,EAAAA,uBAAuB,EAAE,yBAJT;AAKhBC,EAAAA,uBAAuB,EAAE;AALT,CAAjB",
      "sourceRoot": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server\\",
      "sourcesContent": [
        "module.exports = {\r\n\tCHOOSE_USER_FROM_CLIENT: 'CHOOSE_USER_FROM_CLIENT',\r\n\tCHOOSE_USER_FROM_SERVER: 'CHOOSE_USER_FROM_SERVER',\r\n\tADD_MESSAGE_FROM_CLIENT: 'ADD_MESSAGE_FROM_CLIENT',\r\n\tADD_MESSAGE_FROM_SERVER: 'ADD_MESSAGE_FROM_SERVER',\r\n\tENABLE_USER_FROM_SERVER: 'ENABLE_USER_FROM_SERVER',\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586369742212
  },
  "{\"sourceRoot\":\"C:\\\\GitHub\\\\Arladnice.github.io\\\\chat-socket\\\\server\\\\helpers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\GitHub\\\\Arladnice.github.io\\\\chat-socket\\\\server\",\"filename\":\"C:\\\\GitHub\\\\Arladnice.github.io\\\\chat-socket\\\\server\\\\helpers\\\\fs.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\GitHub\\\\Arladnice.github.io\\\\chat-socket\\\\server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server\\helpers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server",
      "filename": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server\\helpers\\fs.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server\\helpers\\fs.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server\\helpers\\fs.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server\\helpers\\",
        "sourceFileName": "fs.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateFile = updateFile;\nexports.readFile = readFile;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path2 = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction updateFile(filename, data) {\n  return new Promise(function (resolve, reject) {\n    var _path = _path2[\"default\"].resolve(__dirname, '..', 'data', filename);\n\n    _fs[\"default\"].writeFile(_path, JSON.stringify({\n      data: data\n    }), 'utf8', function (err) {\n      if (err) {\n        console.log('Error write file', JSON.stringify({\n          data: data\n        }, err));\n        reject(err);\n        return;\n      }\n\n      resolve(true);\n    });\n  });\n}\n\nfunction readFile(filename) {\n  return new Promise(function (resolve, reject) {\n    _fs[\"default\"].readFile(_path2[\"default\"].resolve(__dirname, '..', 'data', filename), 'utf8', function (err, jsonString) {\n      if (err) {\n        console.log('Error reading file from disk:', err);\n        reject(false);\n        return;\n      }\n\n      try {\n        var dataObj = JSON.parse(jsonString);\n        resolve(dataObj.data);\n        return;\n      } catch (err) {\n        console.log('Error parse JSON string', err);\n        reject(false);\n        return;\n      }\n    });\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZzLmpzIl0sIm5hbWVzIjpbInVwZGF0ZUZpbGUiLCJmaWxlbmFtZSIsImRhdGEiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsIl9wYXRoIiwicGF0aCIsIl9fZGlybmFtZSIsImZzIiwid3JpdGVGaWxlIiwiSlNPTiIsInN0cmluZ2lmeSIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJyZWFkRmlsZSIsImpzb25TdHJpbmciLCJkYXRhT2JqIiwicGFyc2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFTyxTQUFTQSxVQUFULENBQW9CQyxRQUFwQixFQUE4QkMsSUFBOUIsRUFBb0M7QUFDMUMsU0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3ZDLFFBQU1DLEtBQUssR0FBR0Msa0JBQUtILE9BQUwsQ0FBYUksU0FBYixFQUF3QixJQUF4QixFQUE4QixNQUE5QixFQUFzQ1AsUUFBdEMsQ0FBZDs7QUFFQVEsbUJBQUdDLFNBQUgsQ0FBYUosS0FBYixFQUFvQkssSUFBSSxDQUFDQyxTQUFMLENBQWU7QUFBRVYsTUFBQUEsSUFBSSxFQUFKQTtBQUFGLEtBQWYsQ0FBcEIsRUFBOEMsTUFBOUMsRUFBc0QsVUFBQ1csR0FBRCxFQUFTO0FBQzlELFVBQUlBLEdBQUosRUFBUztBQUNSQyxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxrQkFBWixFQUFnQ0osSUFBSSxDQUFDQyxTQUFMLENBQWU7QUFBRVYsVUFBQUEsSUFBSSxFQUFKQTtBQUFGLFNBQWYsRUFBeUJXLEdBQXpCLENBQWhDO0FBQ0FSLFFBQUFBLE1BQU0sQ0FBQ1EsR0FBRCxDQUFOO0FBQ0E7QUFDQTs7QUFDRFQsTUFBQUEsT0FBTyxDQUFDLElBQUQsQ0FBUDtBQUNBLEtBUEQ7QUFRQSxHQVhNLENBQVA7QUFZQTs7QUFFTSxTQUFTWSxRQUFULENBQWtCZixRQUFsQixFQUE0QjtBQUNsQyxTQUFPLElBQUlFLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDdkNJLG1CQUFHTyxRQUFILENBQ0NULGtCQUFLSCxPQUFMLENBQWFJLFNBQWIsRUFBd0IsSUFBeEIsRUFBOEIsTUFBOUIsRUFBc0NQLFFBQXRDLENBREQsRUFFQyxNQUZELEVBR0MsVUFBQ1ksR0FBRCxFQUFNSSxVQUFOLEVBQXFCO0FBQ3BCLFVBQUlKLEdBQUosRUFBUztBQUNSQyxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwrQkFBWixFQUE2Q0YsR0FBN0M7QUFDQVIsUUFBQUEsTUFBTSxDQUFDLEtBQUQsQ0FBTjtBQUNBO0FBQ0E7O0FBQ0QsVUFBSTtBQUNILFlBQU1hLE9BQU8sR0FBR1AsSUFBSSxDQUFDUSxLQUFMLENBQVdGLFVBQVgsQ0FBaEI7QUFDQWIsUUFBQUEsT0FBTyxDQUFDYyxPQUFPLENBQUNoQixJQUFULENBQVA7QUFDQTtBQUNBLE9BSkQsQ0FJRSxPQUFPVyxHQUFQLEVBQVk7QUFDYkMsUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkseUJBQVosRUFBdUNGLEdBQXZDO0FBQ0FSLFFBQUFBLE1BQU0sQ0FBQyxLQUFELENBQU47QUFDQTtBQUNBO0FBQ0QsS0FsQkY7QUFvQkEsR0FyQk0sQ0FBUDtBQXNCQSIsInNvdXJjZVJvb3QiOiJDOlxcR2l0SHViXFxBcmxhZG5pY2UuZ2l0aHViLmlvXFxjaGF0LXNvY2tldFxcc2VydmVyXFxoZWxwZXJzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnMgZnJvbSAnZnMnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVGaWxlKGZpbGVuYW1lLCBkYXRhKSB7XG5cdHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdFx0Y29uc3QgX3BhdGggPSBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4nLCAnZGF0YScsIGZpbGVuYW1lKTtcblxuXHRcdGZzLndyaXRlRmlsZShfcGF0aCwgSlNPTi5zdHJpbmdpZnkoeyBkYXRhIH0pLCAndXRmOCcsIChlcnIpID0+IHtcblx0XHRcdGlmIChlcnIpIHtcblx0XHRcdFx0Y29uc29sZS5sb2coJ0Vycm9yIHdyaXRlIGZpbGUnLCBKU09OLnN0cmluZ2lmeSh7IGRhdGEgfSwgZXJyKSk7XG5cdFx0XHRcdHJlamVjdChlcnIpO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRyZXNvbHZlKHRydWUpO1xuXHRcdH0pO1xuXHR9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRGaWxlKGZpbGVuYW1lKSB7XG5cdHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdFx0ZnMucmVhZEZpbGUoXG5cdFx0XHRwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4nLCAnZGF0YScsIGZpbGVuYW1lKSxcblx0XHRcdCd1dGY4Jyxcblx0XHRcdChlcnIsIGpzb25TdHJpbmcpID0+IHtcblx0XHRcdFx0aWYgKGVycikge1xuXHRcdFx0XHRcdGNvbnNvbGUubG9nKCdFcnJvciByZWFkaW5nIGZpbGUgZnJvbSBkaXNrOicsIGVycik7XG5cdFx0XHRcdFx0cmVqZWN0KGZhbHNlKTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRjb25zdCBkYXRhT2JqID0gSlNPTi5wYXJzZShqc29uU3RyaW5nKTtcblx0XHRcdFx0XHRyZXNvbHZlKGRhdGFPYmouZGF0YSk7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9IGNhdGNoIChlcnIpIHtcblx0XHRcdFx0XHRjb25zb2xlLmxvZygnRXJyb3IgcGFyc2UgSlNPTiBzdHJpbmcnLCBlcnIpO1xuXHRcdFx0XHRcdHJlamVjdChmYWxzZSk7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0KTtcblx0fSk7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "fs.js"
      ],
      "names": [
        "updateFile",
        "filename",
        "data",
        "Promise",
        "resolve",
        "reject",
        "_path",
        "path",
        "__dirname",
        "fs",
        "writeFile",
        "JSON",
        "stringify",
        "err",
        "console",
        "log",
        "readFile",
        "jsonString",
        "dataObj",
        "parse"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;;;AAEO,SAASA,UAAT,CAAoBC,QAApB,EAA8BC,IAA9B,EAAoC;AAC1C,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,QAAMC,KAAK,GAAGC,kBAAKH,OAAL,CAAaI,SAAb,EAAwB,IAAxB,EAA8B,MAA9B,EAAsCP,QAAtC,CAAd;;AAEAQ,mBAAGC,SAAH,CAAaJ,KAAb,EAAoBK,IAAI,CAACC,SAAL,CAAe;AAAEV,MAAAA,IAAI,EAAJA;AAAF,KAAf,CAApB,EAA8C,MAA9C,EAAsD,UAACW,GAAD,EAAS;AAC9D,UAAIA,GAAJ,EAAS;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,IAAI,CAACC,SAAL,CAAe;AAAEV,UAAAA,IAAI,EAAJA;AAAF,SAAf,EAAyBW,GAAzB,CAAhC;AACAR,QAAAA,MAAM,CAACQ,GAAD,CAAN;AACA;AACA;;AACDT,MAAAA,OAAO,CAAC,IAAD,CAAP;AACA,KAPD;AAQA,GAXM,CAAP;AAYA;;AAEM,SAASY,QAAT,CAAkBf,QAAlB,EAA4B;AAClC,SAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvCI,mBAAGO,QAAH,CACCT,kBAAKH,OAAL,CAAaI,SAAb,EAAwB,IAAxB,EAA8B,MAA9B,EAAsCP,QAAtC,CADD,EAEC,MAFD,EAGC,UAACY,GAAD,EAAMI,UAAN,EAAqB;AACpB,UAAIJ,GAAJ,EAAS;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CF,GAA7C;AACAR,QAAAA,MAAM,CAAC,KAAD,CAAN;AACA;AACA;;AACD,UAAI;AACH,YAAMa,OAAO,GAAGP,IAAI,CAACQ,KAAL,CAAWF,UAAX,CAAhB;AACAb,QAAAA,OAAO,CAACc,OAAO,CAAChB,IAAT,CAAP;AACA;AACA,OAJD,CAIE,OAAOW,GAAP,EAAY;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,GAAvC;AACAR,QAAAA,MAAM,CAAC,KAAD,CAAN;AACA;AACA;AACD,KAlBF;AAoBA,GArBM,CAAP;AAsBA",
      "sourceRoot": "C:\\GitHub\\Arladnice.github.io\\chat-socket\\server\\helpers\\",
      "sourcesContent": [
        "import fs from 'fs';\nimport path from 'path';\n\nexport function updateFile(filename, data) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst _path = path.resolve(__dirname, '..', 'data', filename);\n\n\t\tfs.writeFile(_path, JSON.stringify({ data }), 'utf8', (err) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.log('Error write file', JSON.stringify({ data }, err));\n\t\t\t\treject(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(true);\n\t\t});\n\t});\n}\n\nexport function readFile(filename) {\n\treturn new Promise((resolve, reject) => {\n\t\tfs.readFile(\n\t\t\tpath.resolve(__dirname, '..', 'data', filename),\n\t\t\t'utf8',\n\t\t\t(err, jsonString) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.log('Error reading file from disk:', err);\n\t\t\t\t\treject(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tconst dataObj = JSON.parse(jsonString);\n\t\t\t\t\tresolve(dataObj.data);\n\t\t\t\t\treturn;\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log('Error parse JSON string', err);\n\t\t\t\t\treject(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t});\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587760281252
  }
}